// <auto-generated />
using System;
using DMS.Api;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DMS.Api.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ActivityClassRoom", b =>
                {
                    b.Property<string>("ActivitiesActivityId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("ClassRoomId")
                        .HasColumnType("int");

                    b.HasKey("ActivitiesActivityId", "ClassRoomId");

                    b.HasIndex("ClassRoomId");

                    b.ToTable("ActivityClassRoom");
                });

            modelBuilder.Entity("ChildGuardian", b =>
                {
                    b.Property<int>("ChildrenChildId")
                        .HasColumnType("int");

                    b.Property<int>("GuardiansGuardianId")
                        .HasColumnType("int");

                    b.HasKey("ChildrenChildId", "GuardiansGuardianId");

                    b.HasIndex("GuardiansGuardianId");

                    b.ToTable("ChildGuardian");
                });

            modelBuilder.Entity("DMS.Api.Models.Activity", b =>
                {
                    b.Property<string>("ActivityId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AgeGroup")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LeadBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaterialsNeeded")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ActivityId");

                    b.ToTable("Activity");

                    b.HasData(
                        new
                        {
                            ActivityId = "A1",
                            AgeGroup = 1,
                            Description = "Description 1",
                            LeadBy = "Leader 1",
                            MaterialsNeeded = "Materials 1",
                            Name = "Drooling Competion"
                        },
                        new
                        {
                            ActivityId = "A2",
                            AgeGroup = 2,
                            Description = "Description 2",
                            LeadBy = "Leader 2",
                            MaterialsNeeded = "Materials 2",
                            Name = "Biggest Poop"
                        },
                        new
                        {
                            ActivityId = "A3",
                            AgeGroup = 3,
                            Description = "Description 3",
                            LeadBy = "Leader 3",
                            MaterialsNeeded = "Materials 3",
                            Name = "Loudest Cry"
                        },
                        new
                        {
                            ActivityId = "A4",
                            AgeGroup = 4,
                            Description = "Description 4",
                            LeadBy = "Leader 4",
                            MaterialsNeeded = "Materials 4",
                            Name = "Never Leave"
                        },
                        new
                        {
                            ActivityId = "A5",
                            AgeGroup = 5,
                            Description = "Description 5",
                            LeadBy = "Leader 5",
                            MaterialsNeeded = "Materials 5",
                            Name = "Feed me NOW!"
                        });
                });

            modelBuilder.Entity("DMS.Api.Models.Address", b =>
                {
                    b.Property<int>("AddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AddressId"));

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GuardianId")
                        .HasColumnType("int");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SchoolId")
                        .HasColumnType("int");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AddressId");

                    b.HasIndex("GuardianId")
                        .IsUnique()
                        .HasFilter("[GuardianId] IS NOT NULL");

                    b.HasIndex("SchoolId")
                        .IsUnique()
                        .HasFilter("[SchoolId] IS NOT NULL");

                    b.ToTable("Address");

                    b.HasData(
                        new
                        {
                            AddressId = 1,
                            City = "City 1",
                            Country = "USA",
                            GuardianId = 1,
                            PostalCode = "12345",
                            SchoolId = 1,
                            State = "State 1",
                            Street = "Street 1"
                        },
                        new
                        {
                            AddressId = 2,
                            City = "City 2",
                            Country = "USA",
                            GuardianId = 2,
                            PostalCode = "23456",
                            SchoolId = 2,
                            State = "State 2",
                            Street = "Street 2"
                        },
                        new
                        {
                            AddressId = 3,
                            City = "City 3",
                            Country = "USA",
                            GuardianId = 3,
                            PostalCode = "34567",
                            SchoolId = 3,
                            State = "State 3",
                            Street = "Street 3"
                        },
                        new
                        {
                            AddressId = 4,
                            City = "City 4",
                            Country = "USA",
                            GuardianId = 4,
                            PostalCode = "45678",
                            SchoolId = 4,
                            State = "State 4",
                            Street = "Street 4"
                        },
                        new
                        {
                            AddressId = 5,
                            City = "City 5",
                            Country = "USA",
                            GuardianId = 5,
                            PostalCode = "56789",
                            SchoolId = 5,
                            State = "State 5",
                            Street = "Street 5"
                        });
                });

            modelBuilder.Entity("DMS.Api.Models.Child", b =>
                {
                    b.Property<int>("ChildId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ChildId"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<int>("ClassRoomId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SchoolId")
                        .HasColumnType("int");

                    b.HasKey("ChildId");

                    b.HasIndex("ClassRoomId");

                    b.HasIndex("SchoolId");

                    b.ToTable("Child");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Child");

                    b.UseTphMappingStrategy();

                    b.HasData(
                        new
                        {
                            ChildId = 1,
                            Age = 1,
                            ClassRoomId = 1,
                            DateOfBirth = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Gender = "Male",
                            LastName = "Doe",
                            Name = "Emma",
                            SchoolId = 1
                        },
                        new
                        {
                            ChildId = 2,
                            Age = 4,
                            ClassRoomId = 1,
                            DateOfBirth = new DateTime(2018, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Gender = "Female",
                            LastName = "Doe",
                            Name = "Erica",
                            SchoolId = 1
                        },
                        new
                        {
                            ChildId = 3,
                            Age = 5,
                            ClassRoomId = 1,
                            DateOfBirth = new DateTime(2017, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Gender = "Male",
                            LastName = "Doe",
                            Name = "Elisa",
                            SchoolId = 1
                        },
                        new
                        {
                            ChildId = 4,
                            Age = 3,
                            ClassRoomId = 1,
                            DateOfBirth = new DateTime(2019, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Gender = "Female",
                            LastName = "Doe",
                            Name = "Olivia",
                            SchoolId = 1
                        },
                        new
                        {
                            ChildId = 5,
                            Age = 4,
                            ClassRoomId = 2,
                            DateOfBirth = new DateTime(2018, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Gender = "Male",
                            LastName = "Doe",
                            Name = "Eva",
                            SchoolId = 1
                        },
                        new
                        {
                            ChildId = 6,
                            Age = 4,
                            ClassRoomId = 2,
                            DateOfBirth = new DateTime(2018, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Gender = "Female",
                            LastName = "Doe",
                            Name = "Nathan",
                            SchoolId = 1
                        },
                        new
                        {
                            ChildId = 7,
                            Age = 4,
                            ClassRoomId = 2,
                            DateOfBirth = new DateTime(2018, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Gender = "Female",
                            LastName = "Doe",
                            Name = "Paulina",
                            SchoolId = 1
                        },
                        new
                        {
                            ChildId = 8,
                            Age = 4,
                            ClassRoomId = 2,
                            DateOfBirth = new DateTime(2018, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Gender = "Female",
                            LastName = "Doe",
                            Name = "Fabiola",
                            SchoolId = 1
                        },
                        new
                        {
                            ChildId = 9,
                            Age = 4,
                            ClassRoomId = 1,
                            DateOfBirth = new DateTime(2018, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Gender = "Male",
                            LastName = "Doe",
                            Name = "Valentina",
                            SchoolId = 1
                        },
                        new
                        {
                            ChildId = 10,
                            Age = 4,
                            ClassRoomId = 1,
                            DateOfBirth = new DateTime(2018, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Gender = "Male",
                            LastName = "Doe",
                            Name = "Claudia",
                            SchoolId = 1
                        });
                });

            modelBuilder.Entity("DMS.Api.Models.ClassRoom", b =>
                {
                    b.Property<int>("ClassRoomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClassRoomId"));

                    b.Property<string>("ChildCareWorker")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ChildrenLimit")
                        .HasColumnType("int");

                    b.Property<string>("ClassRoomName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CourseName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EndAge")
                        .HasColumnType("int");

                    b.Property<int>("SchoolId")
                        .HasColumnType("int");

                    b.Property<int>("StartAge")
                        .HasColumnType("int");

                    b.HasKey("ClassRoomId");

                    b.HasIndex("SchoolId");

                    b.ToTable("ClassRoom");

                    b.HasData(
                        new
                        {
                            ClassRoomId = 1,
                            ChildCareWorker = "Maria Elena",
                            ChildrenLimit = 10,
                            ClassRoomName = "Sunshine Room",
                            CourseName = "Droolers",
                            EndAge = 1,
                            SchoolId = 1,
                            StartAge = 0
                        },
                        new
                        {
                            ClassRoomId = 2,
                            ChildCareWorker = "Francisca",
                            ChildrenLimit = 12,
                            ClassRoomName = "Rainbow Room",
                            CourseName = "Walkers",
                            EndAge = 2,
                            SchoolId = 1,
                            StartAge = 1
                        },
                        new
                        {
                            ClassRoomId = 3,
                            ChildCareWorker = "Claudia",
                            ChildrenLimit = 15,
                            ClassRoomName = "Adventure Zone",
                            CourseName = "Wabblers",
                            EndAge = 3,
                            SchoolId = 1,
                            StartAge = 2
                        },
                        new
                        {
                            ClassRoomId = 4,
                            ChildCareWorker = "Irene",
                            ChildrenLimit = 12,
                            ClassRoomName = "Little Explorers",
                            CourseName = "Go Wild",
                            EndAge = 4,
                            SchoolId = 1,
                            StartAge = 3
                        },
                        new
                        {
                            ClassRoomId = 5,
                            ChildCareWorker = "Natalia",
                            ChildrenLimit = 10,
                            ClassRoomName = "Cozy Corner",
                            CourseName = "Hikers",
                            EndAge = 5,
                            SchoolId = 1,
                            StartAge = 4
                        },
                        new
                        {
                            ClassRoomId = 6,
                            ChildCareWorker = "Catalina",
                            ChildrenLimit = 10,
                            ClassRoomName = "Tiny Tots Haven",
                            CourseName = "Dancers",
                            EndAge = 6,
                            SchoolId = 1,
                            StartAge = 5
                        });
                });

            modelBuilder.Entity("DMS.Api.Models.Guardian", b =>
                {
                    b.Property<int>("GuardianId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GuardianId"));

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GuardianId");

                    b.ToTable("Guardian");

                    b.HasData(
                        new
                        {
                            GuardianId = 1,
                            Email = "guardian1@example.com",
                            Name = "Guardian 1",
                            PhoneNumber = "1234567890"
                        },
                        new
                        {
                            GuardianId = 2,
                            Email = "guardian2@example.com",
                            Name = "Guardian 2",
                            PhoneNumber = "2345678901"
                        },
                        new
                        {
                            GuardianId = 3,
                            Email = "guardian3@example.com",
                            Name = "Guardian 3",
                            PhoneNumber = "3456789012"
                        },
                        new
                        {
                            GuardianId = 4,
                            Email = "guardian4@example.com",
                            Name = "Guardian 4",
                            PhoneNumber = "4567890123"
                        },
                        new
                        {
                            GuardianId = 5,
                            Email = "guardian5@example.com",
                            Name = "Guardian 5",
                            PhoneNumber = "5678901234"
                        });
                });

            modelBuilder.Entity("DMS.Api.Models.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AddressId")
                        .HasColumnType("int");

                    b.Property<double>("Latitude")
                        .HasColumnType("float");

                    b.Property<double>("Longitude")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("AddressId")
                        .IsUnique();

                    b.ToTable("Location");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AddressId = 1,
                            Latitude = 12.345599999999999,
                            Longitude = 78.901200000000003
                        },
                        new
                        {
                            Id = 2,
                            AddressId = 2,
                            Latitude = 23.456700000000001,
                            Longitude = 87.654300000000006
                        },
                        new
                        {
                            Id = 3,
                            AddressId = 3,
                            Latitude = 34.567799999999998,
                            Longitude = 98.7654
                        },
                        new
                        {
                            Id = 4,
                            AddressId = 4,
                            Latitude = 45.678899999999999,
                            Longitude = 76.543199999999999
                        },
                        new
                        {
                            Id = 5,
                            AddressId = 5,
                            Latitude = 56.789000000000001,
                            Longitude = 65.432100000000005
                        });
                });

            modelBuilder.Entity("DMS.Api.Models.Pantry", b =>
                {
                    b.Property<int>("PantryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PantryId"));

                    b.Property<int>("ClassRoomId")
                        .HasColumnType("int");

                    b.Property<int>("ClothChangesCount")
                        .HasColumnType("int");

                    b.Property<int>("DiaperCount")
                        .HasColumnType("int");

                    b.Property<int>("MilkBottleCount")
                        .HasColumnType("int");

                    b.Property<int>("MinimunRequiredBottles")
                        .HasColumnType("int");

                    b.Property<int>("MinimunRequiredChanges")
                        .HasColumnType("int");

                    b.Property<int>("MinimunRequiredDiapers")
                        .HasColumnType("int");

                    b.Property<bool>("NeedsClothes")
                        .HasColumnType("bit");

                    b.Property<bool>("NeedsMoreBottles")
                        .HasColumnType("bit");

                    b.Property<bool>("NeedsMoreSunscreen")
                        .HasColumnType("bit");

                    b.Property<double>("Sunscreen")
                        .HasColumnType("float");

                    b.Property<int>("UsedDiapers")
                        .HasColumnType("int");

                    b.HasKey("PantryId");

                    b.HasIndex("ClassRoomId")
                        .IsUnique();

                    b.ToTable("Pantry");

                    b.HasData(
                        new
                        {
                            PantryId = 1,
                            ClassRoomId = 1,
                            ClothChangesCount = 3,
                            DiaperCount = 50,
                            MilkBottleCount = 5,
                            MinimunRequiredBottles = 3,
                            MinimunRequiredChanges = 3,
                            MinimunRequiredDiapers = 10,
                            NeedsClothes = false,
                            NeedsMoreBottles = false,
                            NeedsMoreSunscreen = false,
                            Sunscreen = 50.0,
                            UsedDiapers = 5
                        },
                        new
                        {
                            PantryId = 2,
                            ClassRoomId = 2,
                            ClothChangesCount = 3,
                            DiaperCount = 50,
                            MilkBottleCount = 5,
                            MinimunRequiredBottles = 3,
                            MinimunRequiredChanges = 3,
                            MinimunRequiredDiapers = 10,
                            NeedsClothes = false,
                            NeedsMoreBottles = false,
                            NeedsMoreSunscreen = false,
                            Sunscreen = 40.0,
                            UsedDiapers = 7
                        });
                });

            modelBuilder.Entity("DMS.Api.Models.School", b =>
                {
                    b.Property<int>("SchoolId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SchoolId"));

                    b.Property<string>("DirectorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SchoolName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SchoolId");

                    b.ToTable("School");

                    b.HasData(
                        new
                        {
                            SchoolId = 1,
                            DirectorName = "Director 1",
                            SchoolName = "Little Sprouts Daycare"
                        },
                        new
                        {
                            SchoolId = 2,
                            DirectorName = "Director 2",
                            SchoolName = "Tiny Tots Childcare Center"
                        },
                        new
                        {
                            SchoolId = 3,
                            DirectorName = "Director 3",
                            SchoolName = "Sunshine Kids Daycare"
                        },
                        new
                        {
                            SchoolId = 4,
                            DirectorName = "Director 4",
                            SchoolName = "Happy Hearts Preschool and Daycare"
                        },
                        new
                        {
                            SchoolId = 5,
                            DirectorName = "Director 5",
                            SchoolName = "Playful Pals Child Development Center"
                        });
                });

            modelBuilder.Entity("DMS.Api.Models.Student", b =>
                {
                    b.HasBaseType("DMS.Api.Models.Child");

                    b.Property<int?>("SchoolId1")
                        .HasColumnType("int");

                    b.HasIndex("SchoolId1");

                    b.HasDiscriminator().HasValue("Student");
                });

            modelBuilder.Entity("ActivityClassRoom", b =>
                {
                    b.HasOne("DMS.Api.Models.Activity", null)
                        .WithMany()
                        .HasForeignKey("ActivitiesActivityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DMS.Api.Models.ClassRoom", null)
                        .WithMany()
                        .HasForeignKey("ClassRoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ChildGuardian", b =>
                {
                    b.HasOne("DMS.Api.Models.Child", null)
                        .WithMany()
                        .HasForeignKey("ChildrenChildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DMS.Api.Models.Guardian", null)
                        .WithMany()
                        .HasForeignKey("GuardiansGuardianId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DMS.Api.Models.Address", b =>
                {
                    b.HasOne("DMS.Api.Models.Guardian", "Guardian")
                        .WithOne("Address")
                        .HasForeignKey("DMS.Api.Models.Address", "GuardianId");

                    b.HasOne("DMS.Api.Models.School", "School")
                        .WithOne("Address")
                        .HasForeignKey("DMS.Api.Models.Address", "SchoolId");

                    b.Navigation("Guardian");

                    b.Navigation("School");
                });

            modelBuilder.Entity("DMS.Api.Models.Child", b =>
                {
                    b.HasOne("DMS.Api.Models.ClassRoom", "ClasssRoom")
                        .WithMany("Children")
                        .HasForeignKey("ClassRoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DMS.Api.Models.School", "School")
                        .WithMany()
                        .HasForeignKey("SchoolId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("ClasssRoom");

                    b.Navigation("School");
                });

            modelBuilder.Entity("DMS.Api.Models.ClassRoom", b =>
                {
                    b.HasOne("DMS.Api.Models.School", "School")
                        .WithMany("ClassRooms")
                        .HasForeignKey("SchoolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("School");
                });

            modelBuilder.Entity("DMS.Api.Models.Location", b =>
                {
                    b.HasOne("DMS.Api.Models.Address", "Address")
                        .WithOne("Location")
                        .HasForeignKey("DMS.Api.Models.Location", "AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");
                });

            modelBuilder.Entity("DMS.Api.Models.Pantry", b =>
                {
                    b.HasOne("DMS.Api.Models.ClassRoom", "ClassRoom")
                        .WithOne("Pantry")
                        .HasForeignKey("DMS.Api.Models.Pantry", "ClassRoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ClassRoom");
                });

            modelBuilder.Entity("DMS.Api.Models.Student", b =>
                {
                    b.HasOne("DMS.Api.Models.School", null)
                        .WithMany("Students")
                        .HasForeignKey("SchoolId1");
                });

            modelBuilder.Entity("DMS.Api.Models.Address", b =>
                {
                    b.Navigation("Location")
                        .IsRequired();
                });

            modelBuilder.Entity("DMS.Api.Models.ClassRoom", b =>
                {
                    b.Navigation("Children");

                    b.Navigation("Pantry");
                });

            modelBuilder.Entity("DMS.Api.Models.Guardian", b =>
                {
                    b.Navigation("Address");
                });

            modelBuilder.Entity("DMS.Api.Models.School", b =>
                {
                    b.Navigation("Address");

                    b.Navigation("ClassRooms");

                    b.Navigation("Students");
                });
#pragma warning restore 612, 618
        }
    }
}
